library(tidyverse)
# get names
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# function for trimming outliers (good idea??)
trim <- function(x, .at){
x[abs(x) > .at] <- sign(x[abs(x) > .at])*.at
return(x)
}
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
# export as r binary
save(list = 'biomarker_clean',
file = 'data/biomarker-clean.RData')
# ACTUAL CODE
load(data/biomarker-clean.RData)
# ACTUAL CODE
load("data/biomarker-clean.RData")
ggplot()
library(tidyverse)
# get names
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# function for trimming outliers (good idea??)
trim <- function(x, .at){
x[abs(x) > .at] <- sign(x[abs(x) > .at])*.at
return(x)
}
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
# export as r binary
save(list = 'biomarker_clean',
file = 'data/biomarker-clean.RData')
# ACTUAL CODE
load("data/biomarker-clean.RData")
View(var_names)
View(biomarker_clean)
ggplot(biomarker_clean) %>%
geom_point()
ggplot(biomarker_clean) +
geom_point()
ggplot(biomarker_clean) +
geom_point(aes(x = biomarker_clean))
ggplot(biomarker_clean) +
geom_point(aes(x = biomarker_clean$group))
View(biomarker_clean)
z_score <- data %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
library(tidyverse)
z_score <- data %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
z_score <- data %>%
select::(where(is.numeric)) %>%
z_score <- data %>%
mutate(across(everything(), ~ scale(.)))
z_score <- biomarker-clean %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
z_score <- biomarker_clean %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
deviation <- biomarker-clean %>%
mutate(total_deviation = rowSums(abs(z_score), na.rm = T))
deviation <- biomarker_clean %>%
mutate(total_deviation = rowSums(abs(z_score), na.rm = T))
deviation
z_score
deviation_by_group <- deviation %>%
group_by(group) %>%
summarize(mean_deviation = mean(total_deviation_score, na.rm = TRUE),
sd_deviation = sd(total_deviation_score, na.rm = TRUE),
.groups = 'drop')
deviation_by_group <- deviation %>%
group_by(group) %>%
summarize(mean_deviation = mean(total_deviation, na.rm = T),
sd_deviation = sd(total_deviation, na.rm = T),
.groups = 'drop')
z_score <- biomarker_clean %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
deviation <- biomarker_clean %>%
mutate(total_deviation = rowSums(abs(z_score), na.rm = T))
deviation_by_group <- deviation %>%
group_by(group) %>%
summarize(mean_deviation = mean(total_deviation, na.rm = T),
sd_deviation = sd(total_deviation, na.rm = T),
.groups = 'drop')
library(ggplot2)
library(ggplot2)
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score") +
geom_hline(yintercept = mean(deviation$total_deviation) + 3 * sd(deviation$total_deviation),
color = "red", linetype = "dashed",
label = "Outlier Threshold")
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score")
ggplot(aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score")
ggplot(aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score")
ggplot(aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score")
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score")
library(tidyverse)
# get names
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# function for trimming outliers (good idea??)
trim <- function(x, .at){
x[abs(x) > .at] <- sign(x[abs(x) > .at])*.at
return(x)
}
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
# export as r binary
save(list = 'biomarker_clean',
file = 'data/biomarker-clean.RData')
# ACTUAL CODE
load("data/biomarker-clean.RData")
z_score <- biomarker_clean %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
deviation <- biomarker_clean %>%
mutate(total_deviation = rowSums(abs(z_score), na.rm = T))
library(ggplot2)
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score")
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score")
deviation_by_group <- deviation %>%
group_by(group) %>%
summarize(mean_deviation = mean(total_deviation, na.rm = T),
sd_deviation = sd(total_deviation, na.rm = T),
.groups = 'drop')
deviation_by_group
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score") +
theme_minimal()
z_score <- biomarker_clean %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
deviation <- biomarker_clean %>%
mutate(total_deviation = rowSums(abs(z_score), na.rm = T))
library(ggplot2)
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score") +
theme_minimal()
z_score <- biomarker_clean %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
deviation <- biomarker_clean %>%
mutate(total_deviation = rowSums(abs(z_score), na.rm = T))
library(ggplot2)
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score") +
theme_minimal()
outlier_counts <- data_zscores %>%
mutate(across(everything(), ~ abs(.) > 3)) %>%
summarise(across(everything(), sum, na.rm = TRUE))
outlier_counts <- z_score %>%
mutate(across(everything(), ~ abs(.) > 3)) %>%
summarise(across(everything(), sum, na.rm = TRUE))
# Step 3: Convert to a tidy format to see outlier counts per column
outlier_counts_long <- outlier_counts %>%
pivot_longer(cols = everything(),
names_to = "Column",
values_to = "Outlier_Count") %>%
arrange(desc(Outlier_Count))
outlier_counts_long
mutate(across(everything(), ~ abs(.) > 3)) %>%
summarise(across(everything(), sum, na.rm = T))
outlier_counts <- z_score %>%
group_by(group) %>%
mutate(across(everything(), ~ abs(.) > 3)) %>%
summarise(across(everything(), sum, na.rm = T))
z_score <- biomarker_clean %>%
group_by(group) %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
z_score <- biomarker_clean %>%
select(where(is.numeric)) %>%
mutate(across(everything(), ~ scale(.)))
###
deviation <- biomarker_clean %>%
mutate(total_deviation = rowSums(abs(z_score), na.rm = T))
library(ggplot2)
ggplot(deviation, aes(x = group, y = total_deviation)) +
geom_boxplot() +
labs(title = "Total Deviation Score by Group",
x = "Group", y = "Total Deviation Score") +
theme_minimal()
